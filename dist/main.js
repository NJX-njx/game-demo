class b{constructor(){if(b.instance)return b.instance;b.instance=this}async loadJSON(t){const e=await fetch(t);if(!e.ok)throw new Error(`Failed to load JSON: ${t}`);return await e.json()}async loadImg(t){return new Promise((e,s)=>{const i=new Image;i.src=t,i.onload=()=>e(i),i.onerror=a=>s(new Error(`Failed to load image: ${t}`))})}}const H=new b;class w{constructor(){if(w.instance)return w.instance;w.instance=this}async load(){this.tempCanvas=document.querySelector("canvas#buffer"),this.texturesURL=await H.loadJSON("assets/imgs/Textures.json"),this.textures={};const t=new Map,e=[];for(const i of Object.keys(this.texturesURL))for(const a of Object.keys(this.texturesURL[i]))e.push(this.texturesURL[i][a]);const s=e.map(async i=>{const a=await fetch(i);if(!a.ok)throw new Error(`Failed to load image: ${i}`);const r=await a.blob(),o=await createImageBitmap(r);t.set(i,o)});await Promise.all(s);for(const i of Object.keys(this.texturesURL)){this.textures[i]={};for(const a of Object.keys(this.texturesURL[i]))this.textures[i][a]=t.get(this.texturesURL[i][a])}}getTexture(t,e="0"){return this.textures[t]&&this.textures[t][e]?this.textures[t][e]:null}}const C=new w;class k{constructor(){if(k.instance)return k.instance;k.instance=this,this.canvas=document.getElementById("canvas"),this.container=document.querySelector("#game-container"),this.isCapture=!1,this.ratio=this.canvas.width/this.container.clientWidth,this.x=0,this.y=0,this.prevX=0,this.prevY=0,this.left=!1,this.right=!1,this.clickable=!1,this.container.addEventListener("click",()=>this.capture()),this.container.addEventListener("mousemove",t=>this.move(t)),this.container.addEventListener("mousedown",t=>this.mouseDown(t)),this.container.addEventListener("mouseup",t=>this.mouseUp(t)),document.addEventListener("pointerlockchange",()=>this.uncapture()),document.addEventListener("visibilitychange",()=>this.blur()),document.addEventListener("click",()=>y.continue())}async capture(){this.isCapture||(await this.container.requestPointerLock({unadjustedMovement:!1}),this.isCapture=!0,setTimeout(()=>{this.clickable=!0},200))}blur(){document.visibilityState==="hidden"&&(document.exitPointerLock(),this.uncapture())}uncapture(){console.debug("uncapture: ",document.pointerLockElement,this.container),console.debug("uncapture: ",document.pointerLockElement!==this.container),document.pointerLockElement!==this.container&&(this.isCapture=!1,y.pause()),this.clickable=!1}mouseDown(t){t.preventDefault(),this.clickable&&(t.button===0&&(this.left=!0),t.button===2&&(this.right=!0))}mouseUp(t){t.preventDefault(),t.button===0&&(this.left=!1),t.button===2&&(this.right=!1)}move(t){t.preventDefault(),this.isCapture&&(this.ratio=this.canvas.width/this.container.clientWidth,this.x+=t.layerX-this.prevX,this.y+=t.layerY-this.prevY,this.prevX=t.layerX,this.prevY=t.layerY,this.x+=t.movementX*this.ratio,this.y+=t.movementY*this.ratio,this.x<0&&(this.x=0),this.y<0&&(this.y=0),this.x>this.canvas.width&&(this.x=this.canvas.width),this.y>this.canvas.height&&(this.y=this.canvas.height))}draw(t){t.drawImage(C.getTexture("cursor"),12,9,16,22,this.x-4,this.y-5,16,22)}get position(){return new Vector(this.x,this.y)}}class S{status;KEYMAP=new Map([["ShiftLeft","LShift"],["ShiftRight","RShift"],["ControlLeft","LCtrl"],["ControlRight","RCtrl"],["AltLeft","LAlt"],["AltRight","RAlt"],["MetaLeft","LWin"],["MetaRight","RWin"],["Escape","Esc"],["F1","F1"],["F2","F2"],["F3","F3"],["F4","F4"],["F5","F5"],["F6","F6"],["F7","F7"],["F8","F8"],["F9","F9"],["F10","F10"],["F11","F11"],["F12","F12"],["Digit0","0"],["Digit1","1"],["Digit2","2"],["Digit3","3"],["Digit4","4"],["Digit5","5"],["Digit6","6"],["Digit7","7"],["Digit8","8"],["Digit9","9"],["KeyA","A"],["KeyB","B"],["KeyC","C"],["KeyD","D"],["KeyE","E"],["KeyF","F"],["KeyG","G"],["KeyH","H"],["KeyI","I"],["KeyJ","J"],["KeyK","K"],["KeyL","L"],["KeyM","M"],["KeyN","N"],["KeyO","O"],["KeyP","P"],["KeyQ","Q"],["KeyR","R"],["KeyS","S"],["KeyT","T"],["KeyU","U"],["KeyV","V"],["KeyW","W"],["KeyX","X"],["KeyY","Y"],["KeyZ","Z"],["ArrowUp","Up"],["ArrowDown","Down"],["ArrowLeft","Left"],["ArrowRight","Right"],["Home","Home"],["End","End"],["PageUp","Page Up"],["PageDown","Page Down"],["Enter","Enter"],["Space","Space"],["Backspace","Backspace"],["Tab","Tab"],["Delete","Delete"],["Insert","Insert"],["CapsLock","Caps Lock"],["NumLock","Num Lock"],["ScrollLock","Scroll Lock"],["Pause","Pause"],["PrintScreen","Print Screen"],["Numpad0","NUMPAD0"],["Numpad1","NUMPAD1"],["Numpad2","NUMPAD2"],["Numpad3","NUMPAD3"],["Numpad4","NUMPAD4"],["Numpad5","NUMPAD5"],["Numpad6","NUMPAD6"],["Numpad7","NUMPAD7"],["Numpad8","NUMPAD8"],["Numpad9","NUMPAD9"],["NumpadMultiply","Mul"],["NumpadAdd","Add"],["NumpadSubtract","Sub"],["NumpadDecimal","Dec"],["NumpadDivide","Div"],["ContextMenu","Apps"],["Help","Help"]]);constructor(){if(S.instance)return S.instance;S.instance=this,this.status=new Map,this.KEYMAP.forEach((t,e)=>{this.status.set(t,!1)}),document.addEventListener("keydown",t=>{const e=this.KEYMAP.get(t.code);this.status.has(e)&&this.status.set(e,!0)}),document.addEventListener("keyup",t=>{const e=this.KEYMAP.get(t.code);this.status.has(e)&&this.status.set(e,!1)}),addEventListener("keydown",t=>{t.preventDefault()})}isKeyDown(t){return this.status.get(t)||!1}isKeysDown(t){let e=!1;return t.forEach(s=>{e=e||this.isKeyDown(s)}),e}}class O{constructor(){this.keyboard=new S,this.mouse=new k,this.keyPrevState=new Map,this.keyCurrState=new Map}update(){[...this.keyboard.KEYMAP.values(),"ClickLeft","ClickRight"].forEach(e=>{this.keyPrevState.set(e,this.keyCurrState.get(e)||!1),this.keyCurrState.set(e,this.isKeyDown(e))})}isKeyDown(t){return t==="ClickLeft"?this.mouse.left:t==="ClickRight"?this.mouse.right:this.keyboard.isKeyDown(t)}isKeysDown(t){return t.some(e=>this.isKeyDown(e))}isAllKeysDown(t){return t.every(e=>this.isKeyDown(e))}isFirstDown(t){return this.keyCurrState.get(t)&&!this.keyPrevState.get(t)}isHeld(t){return this.keyCurrState.get(t)}isReleased(t){return!this.keyCurrState.get(t)&&this.keyPrevState.get(t)}}const u=new O;class v{constructor(){if(v.instance)return v.instance;v.instance=this,this.backgroundMusic=null,this.init()}handleClick=()=>{const t=new Audio;t.muted=!0,t.play().catch(()=>{}),document.removeEventListener("click",this.handleClick)};init(){document.addEventListener("click",this.handleClick)}async load(){this.sounds={},this.soundsURL=await H.loadJSON("assets/audios/Sounds.json");for(const t of Object.keys(this.soundsURL)){this.sounds[t]={};for(const e of Object.keys(this.soundsURL[t])){const s=new Audio(this.soundsURL[t][e]);s.loop=!1,this.sounds[t][e]=s}}}async playSound(t,e=0){const s=this.sounds[t]&&this.sounds[t][e];if(s)if(s.paused)s.currentTime=0,s.play().catch(i=>{console.error(`Error playing sound: ${t+e}`,i)});else{if(t==="walk")return;const i=s.cloneNode();i.currentTime=0,i.play().catch(a=>{console.error(`Error playing sound: ${t+e}`,a)})}}}const L=new v,g={game:{tick:"GAME_TICK"},player:{die:"PLAYER_DIE"},enemy:{},boss:{}};class M{constructor(){if(M.instance)return M.instance;M.instance=this,this.listeners=new Map,this.validEvents=new Set,this._initValidEvents(g)}_initValidEvents(t){for(const e in t)typeof t[e]=="object"?this._initValidEvents(t[e]):this.validEvents.add(t[e])}_checkEvent(t){this.validEvents.has(t)||console.warn(`[EventBus] 事件 "${t}" 不存在`)}on(t,e,s={}){const{priority:i=0,maxCalls:a=1/0,onDispose:r=null}=s;this._checkEvent(t),this.listeners.has(t)||this.listeners.set(t,[]);const o=this.listeners.get(t),n={handler:e,priority:i,maxCalls:a,callCount:0,onDispose:r},m=o.findIndex(B=>i>B.priority);return m===-1?o.push(n):o.splice(m,0,n),()=>this.off(t,e)}off(t,e){this._checkEvent(t);const s=this.listeners.get(t);s&&this.listeners.set(t,s.filter(i=>i.handler===e?(i.onDispose&&i.onDispose(),!1):!0))}emit(t,e){this._checkEvent(t);const s=this.listeners.get(t);if(s)for(const i of[...s]){try{i.handler(e)}catch(a){console.error(`[EventBus] ${t} handler error`,a)}i.callCount++,i.callCount>=i.maxCalls&&this.off(t,i.handler)}}emitReduce(t,e,s){this._checkEvent(t);const i=this.listeners.get(t);if(!i)return e;let a=e;for(const r of[...i]){try{const o=r.handler(a);o!==void 0&&(a=s(a,o))}catch(o){console.error(`[EventBus] ${t} handler error`,o)}r.callCount++,r.callCount>=r.maxCalls&&this.off(t,r.handler)}return a}}const x=new M;class l{constructor(t,e){this.position=t,this.size=e}add(t,e=new Vector(0,0)){return new l(t.addVector(this.position),e.addVector(this.size))}getCenter(){return this.position.addVector(this.size.scale(.5))}getTopLeft(){return this.position}getBottomRight(){return this.position.addVector(this.size)}contains(t){const e=this.getTopLeft(),s=this.getBottomRight();return t.x>=e.x&&t.x<=s.x&&t.y>=e.y&&t.y<=s.y}checkHit(t){const e=this.getTopLeft().x,s=this.getBottomRight().x,i=this.getTopLeft().y,a=this.getBottomRight().y,r=t.getTopLeft().x,o=t.getBottomRight().x,n=t.getTopLeft().y,m=t.getBottomRight().y;return!(s<=r||e>=o||i>=m||a<=n)}checkHits(t,e){for(let s of t)if(this.checkHit(s))return e(),s;return null}merge(t){let e=new Vector(Math.min(this.position.x,t.position.x),Math.min(this.position.y,t.position.y)),s=new Vector(Math.max(this.position.x+this.size.x,t.position.x+t.size.x),Math.max(this.position.y+this.size.y,t.position.y+t.size.y));return F(e,s)}clip(t){let e=new Vector(Math.max(this.position.x,t.position.x),Math.max(this.position.y,t.position.y)),s=new Vector(Math.min(this.position.x+this.size.x,t.position.x+t.size.x),Math.min(this.position.y+this.size.y,t.position.y+t.size.y));return F(e,s)}}const F=(c,t)=>c.x>=t.x||c.y>=t.y?null:new l(c,t.subVector(c));let h=class f{constructor(t=0,e=0){this.x=t,this.y=e}copy(){return new f(this.x,this.y)}getAxis(t){return t===0?this.x:this.y}add(t,e){return new f(this.x+t,this.y+e)}addVector(t){return this.add(t.x,t.y)}sub(t,e){return this.add(-t,-e)}subVector(t){return this.sub(t.x,t.y)}addEqual(t){return this.x+=t.x,this.y+=t.y,this}subEqual(t){return this.x-=t.x,this.y-=t.y,this}scale(t){return new f(this.x*t,this.y*t)}magnitude(){return Math.sqrt(this.x**2+this.y**2)}normalize(){const t=this.magnitude();return t===0?new f(0,0):new f(this.x/t,this.y/t)}dot(t){return this.x*t.x+this.y*t.y}rotate(t){const e=Math.cos(t),s=Math.sin(t),i=this.x*e-this.y*s,a=this.x*s+this.y*e;return new f(i,a)}angle(){return Math.atan2(this.y,this.x)}round(){return new f(Math.round(this.x),Math.round(this.y))}};class I extends l{constructor(t,e,s){super(new h(t.x,t.y),new h(e.x,e.y)),this.type=s}}class U extends l{constructor(t,e,s,i,a={}){super(new h(t.x,t.y),new h(e.x,e.y)),this.type=s,this.autoTrigger=!!i,Object.assign(this,a)}}class D{constructor(){if(D.instance)return D.instance;D.instance=this,this.backgrounds=[],this.blocks=[],this.textures=[],this.interactions=[],this.mapHitBox=new l(new h(0,0),new h(1280,720))}async loadRoom(t,e){const s=`assets/stages/layer${t}/room${e}.json`;try{const i=await H.loadJSON(s);this.rawMapData=JSON.parse(JSON.stringify(i)),this.playerSpawn=i.playerSpawn?{...i.playerSpawn}:null,this.enemySpawns=Array.isArray(i.enemySpawns)?i.enemySpawns.map(n=>({...n})):[],this.backgrounds=(i.backgrounds||[]).map(n=>({...n})),this.blocks=(i.blocks||[]).map(n=>new I(n.position,n.size,n.type)),this.textures=(i.textures||[]).map(n=>({...n}));const a=(i.interactions||[]).map(n=>new U(n.position,n.size,n.type,n.autoTrigger,n));this.interactions=[...a.filter(n=>n.autoTrigger),...a.filter(n=>!n.autoTrigger)],this.blockHitboxes=this.blocks.map(n=>new l(new h(n.position.x,n.position.y),new h(n.size.x,n.size.y)));const r=this.interactions.filter(n=>n.autoTrigger),o=this.interactions.filter(n=>!n.autoTrigger);this.interactionHitboxes=[...r.map(n=>new l(new h(n.position.x,n.position.y),new h(n.size.x,n.size.y))),...o.map(n=>new l(new h(n.position.x,n.position.y),new h(n.size.x,n.size.y)))]}catch(i){console.error("MapManager.loadRoom error:",i)}}getPlayerSpawn(){return this.playerSpawn}getEnemySpawns(){return this.enemySpawns||[]}getBlockHitboxes(){return this.blocks||[]}getInteractionHitboxes(){return this.interactions||[]}draw(t){for(const e of this.backgrounds)this.drawItem(t,e,"background");for(const e of this.blocks)this.drawItem(t,e,"block");for(const e of this.textures)this.drawItem(t,e,"texture")}drawItem(t,e,s){t.save();let i=null,a=s+"s";i=C.getTexture(a,e.type),i?t.drawImage(i,e.position.x,e.position.y,e.size.x,e.size.y):(s==="background"?t.fillStyle="#e0e0e0":s==="block"?t.fillStyle="#654321":s==="texture"?t.fillStyle="#8888ff":t.fillStyle="#cccccc",t.fillRect(e.position.x,e.position.y,e.size.x,e.size.y)),t.restore()}}const p=new D;class R{constructor(t=0){this.t=0,this.cd=t}start(){this.t=this.cd}tick(t){this.t=Math.max(0,this.t-t)}ready(){return this.t===0}reset(){this.t=0}set(t=0){this.cd=t}}class J{constructor(t,e,s,i,a){this.baseJump=t,this.maxJump=e,this.gravity=s,this.coyoteTime=i,this.jumpBuffer=new R(a),this.jumpBufferTime=a,this.isJumping=!1,this.isFalling=!1,this.jumpVelocity=0,this.chargeTime=0,this.coyoteTimer=0,this.times=1}startJump(){this.isJumping=!0,this.isFalling=!1,this.chargeTime=0,this.jumpBuffer.reset(),this.coyoteTimer=0,L.playSound(this.type,"jump")}updateJump(t,e,s){this.jumpBuffer.tick(e),s?(this.coyoteTimer=this.coyoteTime,this.isJumping=!1,this.isFalling=!1,!s&2&&(this.jumpVelocity=0),s&2?this.times=1.5:this.times=1,this.jumpBuffer.ready()||this.startJump()):(this.isJumping||(this.isFalling=!0),this.coyoteTimer=Math.max(this.coyoteTimer-e,0),!this.isJumping&&!this.jumpBuffer.ready()&&this.coyoteTimer>0&&this.startJump()),this.isJumping?!this.isFalling&&t&&this.chargeTime<this.maxJump*this.times?(this.chargeTime+=e,this.jumpVelocity=Math.min(this.baseJump+this.chargeTime/this.maxJump*this.times*(this.maxJump*this.times-this.baseJump),this.maxJump*this.times)):(this.isFalling=!0,this.updateFalling(e)):this.isFalling&&this.updateFalling(e)}updateFalling(t){this.jumpVelocity-=this.gravity*t,this.jumpVelocity=Math.max(-6*this.baseJump,this.jumpVelocity)}}class j{constructor(t,e,s=new h){this.type="",this.velocity=s,this.hitbox=new l(t,e),this.jumping=new J(4,9,.5,8,15),this.MaxSpeed=6,this.attackBox=null,this.hurtBox=null}getCenter(){return this.hitbox.getCenter()}isOnGround(){if(this.velocity.y<0)return!1;this.hitbox.position.y+=1;let t=!1;const e=p.getBlockHitboxes();return t=!!this.hitbox.checkHits(e,()=>{}),this.hitbox.position.y-=1,t&&(this.isflying=0),t}rigidMove(t){let e=this.velocity.scale(t).round(),s=0,i=p.getBlockHitboxes();for(let a=0;a<Math.abs(e.x);++a)if(this.hitbox.position.x+=Math.sign(e.x),this.hitbox.checkHits(i,()=>{this.hitbox.position.x-=Math.sign(e.x)})){s|=1;break}for(let a=0;a<Math.abs(e.y);++a)if(this.hitbox.position.y+=Math.sign(e.y),this.hitbox.checkHits(i,()=>{this.hitbox.position.y-=Math.sign(e.y)})){s|=2;break}return s}updateY(t,e){this.jumping.updateJump(e,t,this.isOnGround())}updateX(t,e){const s=this.isOnGround();let i=this.velocity.x;if(s){if(e===0)i*=Math.exp(-.5*t);else{const a=10*t;i=e*Math.min(Math.sqrt(this.velocity.x*this.velocity.x+a),this.MaxSpeed)}e&&L.playSound(this.type,"walk")}else{const a=.3*t;e!==0?(i+=a*(e*this.MaxSpeed-this.velocity.x),Math.abs(i)>this.MaxSpeed&&(i=this.MaxSpeed*Math.sign(i))):i*=Math.exp(-.05*t)}return i}updateXY(t,e,s){this.updateY(t,s()),this.velocity.y=-this.jumping.jumpVelocity,this.velocity.x=this.updateX(t,e());let i=this.rigidMove(t);i&1&&(this.velocity.x=0),i&2&&(this.velocity.y=this.jumping.jumpVelocity=0)}update(t){t=60*t/1e3,this.updateXY(t,()=>0,()=>0)}draw(t){t.fillStyle="rgba(221, 100, 0, 1)",t.fillRect(this.hitbox.position.x,this.hitbox.position.y,this.hitbox.size.x,this.hitbox.size.y)}}class X extends j{constructor(t,e,s,i,a=new h(10,10)){super(t,a,e),this.type="projectile",this.damage=s,this.alive=!0,this.hurtBox=this.hitbox,this.targetSelector=i,z.add(this)}update(t){if(!this.alive)return;const e=60*t/1e3;if(this.rigidMove(e)){this.alive=!1;return}this.targetSelector().forEach(i=>{this.hurtBox.checkHit(i.hurtBox)&&(i.takeDamage(this.damage),this.alive=!1)})}draw(t){this.alive&&(t.fillStyle="yellow",t.fillRect(this.hitbox.position.x,this.hitbox.position.y,this.hitbox.size.x,this.hitbox.size.y))}}class T{constructor(){if(T.instance)return T.instance;T.instance=this,this.projectiles=[]}add(t){this.projectiles.push(t)}update(t){this.projectiles.forEach(e=>e.update(t)),this.projectiles=this.projectiles.filter(e=>e.alive)}draw(t){this.projectiles.forEach(e=>e.draw(t))}clear(){this.projectiles.length=0}}const z=new T;class G{constructor(t=0){this.duration=t,this.remainingTime=0}start(t=null){t!==null&&(this.duration=t),this.remainingTime=this.duration}tick(t){this.remainingTime=Math.max(0,this.remainingTime-t)}expired(){return this.remainingTime<=0}reset(){this.remainingTime=0}remaining(){return this.remainingTime}set(t){this.duration=t}}const _={player:{ATK:"PLAYER_ATK",HP:"PLAYER_HP",SPD:"PLAYER_SPD",HEAL:"PLAYER_HEAL",DMG:"PLAYER_DMG",HP_CONTINUES_DEC:"PLAYER_HP_CONTINUES_DEC",MeteeStartupTime:"PLAYER_MeteeStartupTime",MeteeRecoveryTime:"PLAYER_MeteeRecoveryTime",RangedStartupTime:"PLAYER_RangedStartupTime",RangedRecoveryTime:"PLAYER_RangedRecoveryTime"},enemy:{ATK:"ENEMY_ATK",HP:"ENEMY_HP",DMG:"ENEMY_DMG",DMG_DEC:"ENEMY_DMG_DEC",MeteeStartupTime:"ENEMY_MeteeStartupTime",MeteeRecoveryTime:"ENEMY_MeteeRecoveryTime",RangedStartupTime:"ENEMY_RangedStartupTime",RangedRecoveryTime:"ENEMY_RangedRecoveryTime"},boss:{ATK:"BOSS_ATK",HP:"BOSS_HP",AttackStartupTime:"BOSS_AttackStartupTime",AttackRecoveryTime:"BOSS_AttackRecoveryTime",MeteeStartupTime:"BOSS_MeteeStartupTime",MeteeRecoveryTime:"BOSS_MeteeRecoveryTime",RangedStartupTime:"BOSS_RangedStartupTime",RangedRecoveryTime:"BOSS_RangedRecoveryTime"}};class E{constructor(){if(E.instance)return E.instance;E.instance=this,this.attributes={}}_checkAttr(t){for(const e of Object.keys(_))if(Object.values(_[e]).includes(t))return!0;return console.warn(`[AttributeManager] Unknown attribute key: ${t}`),!1}addAttr(t,e,s,i=null,a=null){if(!this._checkAttr(t))return;this.attributes[t]||(this.attributes[t]={}),this.attributes[t][s]||(this.attributes[t][s]=[]);const r=this.attributes[t][s];for(;a&&r.length>=a;)r.shift();const o=i!==null?new G(i):null;o&&o.start(i),r.push({value:e,timer:o})}removeAttrBySource(t,e){this.attributes[t]&&delete this.attributes[t][e]}removeOneAttrLayer(t,e){if(!this._checkAttr(t)||!this.attributes[t]||!this.attributes[t][e])return!1;const s=this.attributes[t][e];return s.length===0?!1:(s.shift(),s.length===0&&delete this.attributes[t][e],!0)}removeAllAttrBySource(t){for(const e of Object.keys(this.attributes))this.attributes[e][t]&&delete this.attributes[e][t]}refreshAttrDuration(t,e,s){if(this._checkAttr(t)&&!(!this.attributes[t]||!this.attributes[t][e]))for(const i of this.attributes[t][e])i.timer&&i.timer.start(s)}getAttrSum(t){if(!this._checkAttr(t)||!this.attributes[t])return 0;let e=0;for(const s of Object.keys(this.attributes[t])){const i=this.attributes[t][s];e+=i.reduce((a,r)=>a+r.value,0)}return e}getAttrStackCount(t,e){return!this._checkAttr(t)||!this.attributes[t]||!this.attributes[t][e]?0:this.attributes[t][e].length}getAllAttrByType(t){const e={};for(const s of Object.keys(t)){const i=t[s];e[i]=this.getAttrSum(i)}return e}getAllAttr(){const t={};for(const e of Object.keys(this.attributes))t[e]=this.getAttrSum(e);return t}update(t){for(const e of Object.keys(this.attributes))for(const s of Object.keys(this.attributes[e])){const i=this.attributes[e][s];for(const a of i)a.timer&&a.timer.tick(t);this.attributes[e][s]=i.filter(a=>!a.timer||!a.timer.expired()),this.attributes[e][s].length===0&&delete this.attributes[e][s]}}}const W=new E;class N{constructor(t,e){this.owner=t,this.type=e,this.state="idle",this.timer=0}get damage(){return this.owner.state.attack.damage[this.type]}get startupTime(){return this.owner.state.attack.startupTime[this.type]}get recoveryTime(){return this.owner.state.attack.recoveryTime[this.type]}get targetSelector(){return this.owner.attack.targetSelector}trigger(){return this.state==="idle"?(this.state="startup",this.timer=this.startupTime,!0):!1}update(t){if(this.state!=="idle"&&(this.timer-=t,!(this.timer>0)))switch(this.state){case"startup":this.enterActive();break;case"active":this.enterRecovery();break;case"recovery":this.state="idle";break}}enterActive(){this.state="active",L.playSound(this.owner.type,this.type+"Attack"),this.onHit(this.owner,this.damage)}enterRecovery(){this.state="recovery",this.timer=this.recoveryTime}onHit(t,e){}}class V extends N{constructor(t){super(t,"melee")}onHit(t,e){const i=t.facing>0?t.hitbox.size.x/2:-t.hitbox.size.x/2,a=t.hitbox.position.addVector(new h(i,t.hitbox.size.y*.25)),r=new h(t.hitbox.size.x*.8,t.hitbox.size.y*.5),o=new l(a,r);this.targetSelector().forEach(n=>{o.checkHit(n.hurtBox)&&n.takeDamage(e)})}}class $ extends N{constructor(t){super(t,"ranged")}onHit(t,e){const i=t.facing,a=t.hitbox.getCenter();new X(a,new h(12*i,0),e,this.targetSelector)}}class q{static Framerate={run:6,jump:30,fall:30,stand:8};static Frames={run:6,jump:4,fall:2,stand:7};constructor(){this.status="run",this.facing=1,this.frame=1,this.frameRun=0}setStatus(t,e){(t!=this.status||e!=this.facing)&&(this.frame=1,this.frameRun=0,this.status=t,this.facing=e)}update(t){}getFrame(){return C.getTexture("player",0)}}class A extends j{constructor(t=new h(50,50)){if(A.instance)return A.instance;super(new h,t,new h),A.instance=this,this.size=t,this.type="player",this.jumping.type="player",this.baseState={hp_max:100,attack_baseDamage:10,attack_baseMeleeStartupTime:50,attack_baseMeleeRecoveryTime:900,attack_baseRangedStartupTime:150,attack_baseRangedRecoveryTime:700,dash_cooldownTime:600,dash_maxCount:1,items:[]},this.state={hp:this.baseState.hp_max,hp_max:this.baseState.hp_max,attack:{damage:{melee:this.baseState.attack_baseDamage,ranged:this.baseState.attack_baseDamage},startupTime:{melee:this.baseState.attack_baseMeleeStartupTime,ranged:this.baseState.attack_baseRangedStartupTime},recoveryTime:{melee:this.baseState.attack_baseMeleeRecoveryTime,ranged:this.baseState.attack_baseRangedStartupTime}}},this.attack={targetSelector:()=>y.enemies,melee:new V(this),ranged:new $(this)},this.facing=1,this.animation=new q,this.initDash(),this.hurtBox=this.hitbox,this.invulnerableCooldown=new R(100),this.controllerX=()=>{if(this.blockMove)return 0;let e=u.isKeysDown(["A","Left"]),s=u.isKeysDown(["D","Right"]),i=0;return e&&s?i=0:e?this.facing=i=-1:s&&(this.facing=i=1),i},this.controllerY=()=>this.blockMove?0:(u.isFirstDown("Space")&&this.jumping.jumpBuffer.start(),u.isHeld("Space"))}async update(t){this.invulnerableCooldown.tick(t),u.isKeyDown("J")&&this.attack.melee.trigger(),u.isKeyDown("L")&&this.attack.ranged.trigger(),this.attack.melee.update(t),this.attack.ranged.update(t),this.dash.update(t);const e=60*t/1e3;this.updateXY(e,this.controllerX(),this.controllerY()),this.jumping.jumpVelocity>0?this.animation.setStatus("jump",this.facing):this.isOnGround()?this.animation.setStatus("stand",this.facing):this.jumping.jumpVelocity<0&&this.animation.setStatus("fall",this.facing),this.animation.update(e)}updateXY(t,e,s){this.dash.isDashing||(this.updateY(t,s),this.velocity.y=-this.jumping.jumpVelocity,this.velocity.x=this.updateX(t,e));let i=this.rigidMove(t);i&1&&(this.velocity.x=0,this.dash.isDashing=0),i&2&&(this.velocity.y=this.jumping.jumpVelocity=0)}initDash(){this.dash={isDashing:!1,dashDuration:200,dashCooldownTime:this.baseState.dash_cooldownTime,dashSpeed:15,dashDir:{x:1,y:0},dashDurationCooldown:null,dashCooldown:null,dashMaxCount:this.baseState.dash_maxCount,dashCount:0,update:null},this.dash.dashDurationCooldown=new R(this.dash.dashDuration),this.dash.dashCooldown=new R(this.dash.dashCooldownTime),this.dash.update=t=>{this.isOnGround()&&(this.dash.dashCooldown.tick(t),this.dash.dashCooldown.ready()&&this.dash.dashCount<this.dash.dashMaxCount&&(this.dash.dashCount++,this.dash.dashCooldown.start()));let e=0,s=0;if(u.isKeysDown(["A","Left"])&&(e-=1),u.isKeysDown(["D","Right"])&&(e+=1),u.isKeysDown(["W","Up"])&&(s-=1),u.isKeysDown(["S","Down"])&&(s+=1),!this.dash.isDashing&&this.dash.dashCount>0&&u.isKeyDown("K")){e===0&&s===0&&(e=this.facing);let i=Math.sqrt(e*e+s*s);i===0&&(i=1),this.dash.dashDir={x:e/i,y:s/i},this.dash.isDashing=!0,this.dash.dashDurationCooldown.start(),this.dash.dashCount--,L.playSound("player","dash")}this.dash.isDashing&&(this.dash.dashDurationCooldown.tick(t),this.velocity.x=this.dash.dashSpeed*this.dash.dashDir.x,this.velocity.y=this.dash.dashSpeed*this.dash.dashDir.y,this.dash.dashDurationCooldown.ready()&&(this.dash.isDashing=!1,this.jumping.jumpVelocity=-this.velocity.y))}}takeDamage(t){this.invulnerableCooldown.ready()&&(this.state.hp-=t,this.invulnerableCooldown.start(),console.log(this.state.hp),this.state.hp<=0&&(x.emit(g.player.die),alert("你死了")))}takeHeal(t){this.state.hp=Math.min(this.state.hp+t,this.state.hp_max)}setPosition(t){this.hitbox.position=t}draw(t){t.drawImage(this.animation.getFrame(),this.hitbox.position.x,this.hitbox.position.y,this.size.x,this.size.y);const e=this.size.x,s=6,i=this.hitbox.position.x,a=this.hitbox.position.y-12;t.save(),t.fillStyle="red",t.fillRect(i,a,e,s),t.fillStyle="green";const r=Math.max(this.state.hp,0)/this.state.hp_max,o=e*r;t.fillRect(i,a,o,s),t.strokeStyle="black",t.strokeRect(i,a,e,s),t.restore(),this.drawDashUI(t)}drawBoxs(t){t.strokeStyle=this.isInvulnerable?"#cccccc":"#00aaff",t.strokeRect(this.hitbox.position.x,this.hitbox.position.y,this.hitbox.size.x,this.hitbox.size.y),t.strokeStyle="#ff0000";const e=.5*(this.facing>=0?this.hitbox.size.x:-this.hitbox.size.x),s=this.hitbox.position.addVector(new h(e,this.hitbox.size.y*.2)),i=new h(this.hitbox.size.x*.8,this.hitbox.size.y*.5);t.strokeRect(s.x,s.y,i.x,i.y),t.restore()}drawDashUI(t){const e=this.dash.dashMaxCount,s=this.dash.dashCount,i=8,a=4,r=this.hitbox.position.x+this.size.x/2-(e*(i+a)-a)/2,o=this.hitbox.position.y-24;for(let n=0;n<e;n++)t.fillStyle=n<s?"cyan":"gray",t.fillRect(r+n*(i+a),o,i,i),t.strokeStyle="black",t.strokeRect(r+n*(i+a),o,i,i)}}const d=new A;class Q{static Framerate={run:6,jump:30,fall:30,stand:8};static Frames={run:6,jump:4,fall:2,stand:7};constructor(){this.status="run",this.facing=1,this.frame=1,this.frameRun=0}setStatus(t,e){(t!=this.status||e!=this.facing)&&(this.frame=1,this.frameRun=0,this.status=t,this.facing=e)}update(t){}getFrame(){return C.getTexture("enemy",0)}}class Z extends j{constructor(t,e,s=new h(50,50),i=new h){super(e,s,i),this.Size=s,this.type="enemy"+t,this.baseState={hp_max:100,attack_baseDamage:10,attack_baseMeleeStartupTime:50,attack_baseMeleeRecoveryTime:900,attack_baseRangedStartupTime:150,attack_baseRangedRecoveryTime:700,items:[]},this.state={hp:this.baseState.hp_max,hp_max:this.baseState.hp_max,attack:{damage:{melee:this.baseState.attack_baseDamage,ranged:this.baseState.attack_baseDamage},startupTime:{melee:this.baseState.attack_baseMeleeStartupTime,ranged:this.baseState.attack_baseRangedStartupTime},recoveryTime:{melee:this.baseState.attack_baseMeleeRecoveryTime,ranged:this.baseState.attack_baseRangedStartupTime}}},this.facing=1,this.animation=new Q,this.attack={melee:new V(this),targetSelector:()=>[d]},this.hurtBox=this.hitbox,this.invulnerableCooldown=new R(100),this._unbind_list=[]}async update(t){this.invulnerableCooldown.tick(t);const e=Math.abs(this.hitbox.getCenter().x-d.hitbox.getCenter().x),s=this.hitbox.getCenter().y-d.hitbox.getCenter().y;let i=!1,a="patrol";s>50?e<400&&Math.abs(s)<100&&(a="seek_path",this.hasDirectPathToPlayer()&&(i=Math.random()<.2)):s<-50?e<300&&Math.abs(s)<80&&(a="wait",this.hasSafeDropPath()&&(i=Math.random()<.3)):e<400&&Math.abs(s)<60&&(a="attack",i=Math.random()<.4),i&&this.attack.melee.trigger(),this.attack.melee.update(t),this.updateMovementByMode(a,e,s);const r=60*t/1e3;let o=0;this.updateXY(r,()=>{if(this.blockMove)return 0;if(o=0,a==="attack"||a==="seek_path")this.hitbox.position.x<d.hitbox.position.x?this.facing=o=1:this.facing=o=-1,o*=.3;else if(a==="wait")o=0;else{Math.random()<.002&&(this.facing=Math.random()<.5?1:-1);const n=this.hitbox.position.x+this.facing*2,m=new l(new h(n,this.hitbox.position.y),this.hitbox.size),B=p.getBlockHitboxes();let K=!1;for(const Y of B)if(m.checkHit(Y)){K=!0;break}(K||n<0||n>1280)&&(this.facing=-this.facing),o=this.facing*.2}return o},()=>{if(this.blockMove||!(a==="attack"||a==="seek_path"))return 0},!0),this.jumping.jumpVelocity>0?this.animation.setStatus("jump",this.facing):this.isOnGround()?o?this.animation.setStatus("run",this.facing):this.animation.setStatus("stand",this.facing):this.jumping.jumpVelocity<0&&this.animation.setStatus("fall",this.facing),this.animation.update(r)}hasDirectPathToPlayer(){const t=d.hitbox.position,e=this.hitbox.position,s=p.getBlockHitboxes(),i=new l(new h(Math.min(e.x,t.x),Math.min(e.y,t.y)),new h(Math.abs(t.x-e.x),Math.abs(t.y-e.y)));for(const a of s)if(i.checkHit(a))return!1;return!0}hasSafeDropPath(){d.hitbox.position;const t=this.hitbox.position,e=p.getBlockHitboxes(),s=t.y+100,i=new l(new h(t.x,t.y),new h(this.hitbox.size.x,s-t.y));for(const a of e)if(i.checkHit(a))return!0;return!1}updateMovementByMode(t,e,s){switch(t){case"seek_path":this.seekVerticalPath();break;case"wait":this.waitForPlayer();break;case"attack":this.normalMovement();break;case"patrol":default:this.patrolMovement();break}}seekVerticalPath(){const t=d.hitbox.position,e=this.hitbox.position,s=p.getBlockHitboxes();let i=null,a=1/0;for(const r of s)if(r.position.y<e.y&&r.position.y>t.y-50){const o=Math.abs(r.position.x-e.x);o<a&&(a=o,i=r)}i?this.moveToTarget(i):this.wait()}waitForPlayer(){this.hasSafeDropPath()?this.seekDropPoint():this.patrolMovement()}normalMovement(){}patrolMovement(){Math.random()<.02&&(this.facing=Math.random()<.5?1:-1);const t=this.hitbox.position.x+this.facing*2,e=new l(new h(t,this.hitbox.position.y),this.hitbox.size),s=p.getBlockHitboxes();let i=!1;for(const a of s)if(e.checkHit(a)){i=!0;break}(i||t<0||t>1280)&&(this.facing=-this.facing)}moveToTarget(t){const e=t.position,s=this.hitbox.position;e.x>s.x?this.facing=1:e.x<s.x&&(this.facing=-1),e.y<s.y&&this.isOnGround()&&this.jumping.jumpBuffer.start()}seekDropPoint(){const t=d.hitbox.position,e=this.hitbox.position,s=p.getBlockHitboxes();let i=null,a=1/0;for(const r of s)if(r.position.y>e.y&&r.position.y<t.y+50){const o=Math.abs(r.position.x-e.x);o<a&&(a=o,i=r)}i&&this.moveToTarget(i)}wait(){}takeDamage(t){if(this.invulnerableCooldown.ready()&&(this.state.hp-=t,this.invulnerableCooldown.start(),this.state.hp<=0)){this._unbind_list.forEach(s=>s()),this._unbind_list=[];const e=y.enemies.indexOf(this);e!==-1&&y.enemies.splice(e,1)}}draw(t){t.drawImage(this.animation.getFrame(),this.hitbox.position.x,this.hitbox.position.y,this.Size.x,this.Size.y);const e=this.Size.x,s=6,i=this.hitbox.position.x,a=this.hitbox.position.y-12;t.save(),t.fillStyle="red",t.fillRect(i,a,e,s),t.fillStyle="green";const r=Math.max(this.state.hp,0)/this.state.hp_max,o=e*r;t.fillRect(i,a,o,s),t.strokeStyle="black",t.strokeRect(i,a,e,s),t.restore()}drawBoxs(t){t.strokeStyle=this.isInvulnerable?"#cccccc":"#00aaff",t.strokeRect(this.hitbox.position.x,this.hitbox.position.y,this.hitbox.size.x,this.hitbox.size.y),t.strokeStyle="#ff0000";const e=.5*(this.facing>=0?this.hitbox.size.x:-this.hitbox.size.x),s=this.hitbox.position.addVector(new h(e,this.hitbox.size.y*.25)),i=new h(this.hitbox.size.x*.8,this.hitbox.size.y*.5);t.strokeRect(s.x,s.y,i.x,i.y),t.restore()}}class P{constructor(){if(P.instance)return P.instance;P.instance=this,this.canvas=document.getElementById("canvas"),this.ctx=this.canvas.getContext("2d"),this.isStop=!1,this.isPaused=!1,this.lastTime=0;const t=60;this.targetFrameTime=1e3/t,this.loop=this.loop.bind(this),this.statistics={portal:0,bullet:0,restart:0,jump:0,jumpTime:0}}async init(){await C.load(),await L.load(),await p.loadRoom(1,1);const t=p.getPlayerSpawn();d.setPosition(new h(t.x,t.y)),x.on(g.game.tick,({deltaTime:s})=>{u.update(),W.update(s),d.update(s),this.enemies.forEach(i=>i.update(s)),z.update(s)}),x.on(g.game.tick,()=>{const s=this.ctx;s.clearRect(0,0,this.canvas.width,this.canvas.height),p.draw(s),d.draw(s),this.enemies.forEach(i=>i.draw(s)),z.draw(s)},{priority:-1}),x.on(g.player.die,()=>this.stop());const e=p.getEnemySpawns();if(this.enemies=[],Array.isArray(e))for(const s of e)this.enemies.push(new Z(s.type,new h(s.x,s.y)))}start(t=0){this.loop(0)}loop(t){const e=t-this.lastTime;!this.isPaused&&!this.isStop&&e>=this.targetFrameTime&&x.emit(g.game.tick,{deltaTime:e}),this.lastTime=t-e%this.targetFrameTime,requestAnimationFrame(this.loop)}pause(){this.isPaused=!0}continue(){this.isPaused=!1}stop(){this.isStop=!0}}const y=new P;window.onload=()=>{y.init().then(()=>{y.start()})};
